import { Scenes, Markup } from 'telegraf';
import { checkSubscription } from '../utils/checkSubscription';
import { getArbitratorByReferralId } from '../db';
import { menuKeyboard } from '../keyboards';
import { GAMES } from '../constants/games';

export const partnerSearchScene = new Scenes.WizardScene<any>(
  'partnerSearch',
  async (ctx) => {
    const subscribed = await checkSubscription(ctx);
    if (!subscribed) {
      return ctx.scene.leave();
    }

    if ((ctx.message as any)?.text === '–ù–∞–∑–∞–¥') {
      return ctx.scene.leave();
    }

    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É', Markup.keyboard(GAMES).resize());
    return ctx.wizard.next();
  },
  async (ctx) => {
    if ((ctx.message as any)?.text === '–ù–∞–∑–∞–¥') {
      await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É', Markup.keyboard(GAMES).resize());
      return ctx.wizard.back();
    }
    (ctx.wizard.state as any).game = (ctx.message as any)?.text;
    await ctx.reply(
      '–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω',
      Markup.keyboard([['–î–æ 17', '18-22', '22-25', '25+'], ['–ù–∞–∑–∞–¥']]).resize(),
    );
    return ctx.wizard.next();
  },
  async (ctx) => {
    if ((ctx.message as any)?.text === '–ù–∞–∑–∞–¥') {
      await ctx.reply(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É',
        Markup.keyboard(GAMES).resize(),
      );
      return ctx.wizard.selectStep(1);
    }
    (ctx.wizard.state as any).age = (ctx.message as any)?.text;
    await ctx.reply(
      '–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –ø–∞—Ä—Ç–Ω—ë—Ä—à–∏',
      Markup.keyboard([
        ['–ë–∞–∑–æ–≤—ã–π', '–°—Ä–µ–¥–Ω–∏–π', '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π'],
        ['–ù–∞–∑–∞–¥'],
      ]).resize(),
    );
    return ctx.wizard.next();
  },
  async (ctx) => {
    if ((ctx.message as any)?.text === '–ù–∞–∑–∞–¥') {
      await ctx.reply(
        '–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω',
        Markup.keyboard([
          ['–î–æ 17', '18-22', '22-25', '25+'],
          ['–ù–∞–∑–∞–¥'],
        ]).resize(),
      );
      return ctx.wizard.back();
    }
    (ctx.wizard.state as any).skill = (ctx.message as any)?.text;
    await ctx.reply(
      '–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è',
      Markup.keyboard([['–ù–∞–∑–∞–¥']]).resize(),
    );
    return ctx.wizard.next();
  },
  async (ctx) => {
    if ((ctx.message as any)?.text === '–ù–∞–∑–∞–¥') {
      await ctx.reply(
        '–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –ø–∞—Ä—Ç–Ω—ë—Ä—à–∏',
        Markup.keyboard([
          ['–ë–∞–∑–æ–≤—ã–π', '–°—Ä–µ–¥–Ω–∏–π', '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π'],
          ['–ù–∞–∑–∞–¥'],
        ]).resize(),
      );
      return ctx.wizard.back();
    }
    (ctx.wizard.state as any).datetime = (ctx.message as any)?.text;
    const summary = `üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n
üéÆ –ò–≥—Ä–∞: ${ctx.wizard.state.game}\nüéØ –í–æ–∑—Ä–∞—Å—Ç: ${ctx.wizard.state.age}\n‚öîÔ∏è –°–∫–∏–ª: ${ctx.wizard.state.skill}\nüïí –ö–æ–≥–¥–∞: ${ctx.wizard.state.datetime}\n
üîî –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –Ω–∞–ø–∞—Ä–Ω–∏—Ü—ã.
`;
    await ctx.reply(summary, menuKeyboard());
    let ref = '';
    if (ctx.session?.referralId) {
      const arbitrator = await getArbitratorByReferralId(
        ctx.session.referralId,
      );
      if (arbitrator) {
        ref = `\n–†–µ—Ñ–µ—Ä–∞–ª: @${arbitrator.username}`;
      }
    }
    await ctx.telegram.sendMessage(
      process.env.ADMIN_ID as string,
      `${summary}\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${ctx.chat.username}${ref}`,
    );
    return ctx.scene.leave();
  },
);
